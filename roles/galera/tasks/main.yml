- name: Yum remove old mariadb libs
  shell: "rpm -ev mariadb-libs --nodeps"
  ignore_errors: true

- name: Yum install mariadb packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - gnupg2
    - libaio
    - libstdc++
    - libgcc
    - libgcrypt 
    - MariaDB-client
    - MariaDB-server
    - MariaDB-devel
    - MySQL-python
    - galera
    - which
    - MariaDB-shared
    - rsync
    - socat
    - percona-xtrabackup-24
    - qpress

- name: Check if firewalld is running
  shell: systemctl is-active firewalld
  ignore_errors: yes
  register: firewalld_status

- name: Accept MySQL default port 3306/tcp
  firewalld:
    service: mysql
    permanent: true
    state: enabled
    immediate: yes
  when: firewalld_status.stdout == "active"

- name: Accept galera default port 4444/tcp 4567/tcp 4568/tcp
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: yes
  with_items:
    - "4444/tcp"
    - "4567/tcp"
    - "4568/tcp"
  when: firewalld_status.stdout == "active"

- name: Update the local file system CRUD
  file:
    src: "{{ item.src|default(omit) }}"
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    force: "{{ item.force|default(omit) }}"
  with_items:
    - { path: "/etc/mysql", state: "directory" }
    - { path: "/etc/mysql/conf.d", state: "directory" }
    - { src: "/usr/lib64/galera", path: "/usr/lib/galera", state: "link", force: true }
    #- { src: "/etc/mysql/conf.d", path: "/etc/my.cnf.d", state: "link", force: true }
    - { src: "/etc/mysql/my.cnf", path: "/etc/my.cnf", state: "link", force: true }

- name: Link /etc/my.cnf.d to /etc/mysql/conf.d
  file:
    src: /etc/my.cnf.d
    dest: /etc/mysql/conf.d
    state: link
    force: true

- name: Apply mariadb systemd options
  template:
    src: "{{ item.src }}"
    dest: "/etc/systemd/system/mariadb.service.d/{{ item.dest }}"
    mode: "0644"
  with_items:
    - { src: "systemd.environment.conf.j2", dest: "environment.conf" }
    - { src: "systemd.limits.conf.j2", dest: "limits.conf" }
    - { src: "systemd.restart.conf.j2", dest: "restart.conf" }
    - { src: "systemd.slice.conf.j2", dest: "slice.conf" }
    - { src: "systemd.timeout.conf.j2", dest: "timeout.conf" }
  notify:
    - Reload the systemd daemon
    #- Restart all mysql

- name: Reload systemd service files
  systemd:
    daemon_reload: yes

- name: Create galera initial secure tool
  template:
    src: "galera_secure_node.j2"
    dest: "/usr/local/bin/galera_secure_node"
    mode: "0750"

- name: Run galera secure
  command: "/usr/local/bin/galera_secure_node"
  args:
    creates: "/var/lib/mysql/osa_default_secured"
    warn: no

- name: Create the local directories
  file:
    path: "{{ item.path }}"
    state: "directory"
    owner: "{{ item.owner|default('root') }}"
    group: "{{ item.group|default('root') }}"
    mode: "{{ item.mode|default('0755') }}"
    recurse: "{{ item.recurse|default('false') }}"
  with_items:
    - { path: "/var/lib/mysql", owner: "mysql", mode: "02755" }
    - { path: "/var/log/mysql", owner: "mysql", mode: "02755" }

# NOTE: (hwoarang) mariadb packages may drop some default configuration files
# in {{ galera_etc_include_dir  }} so make sure they are gone if necessary in
# case they cause some conflicts with the ones we provide.
- name: Remove existing mariadb configuration files
  file:
    state: absent
    path: "{{ galera_etc_include_dir }}/{{ item  }}"
  with_items: "{{ mariadb_delete_etc_conf_files | default([]) }}"

- name: Drop mariadb config(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "0644"
  with_items:
    - src: my.cnf.j2
      dest: "/etc/mysql/my.cnf"
    - src: cluster.cnf.j2
      dest: "{{ galera_etc_include_dir }}/cluster.cnf"
      #notify:
      #- Restart all mysql
 
- name: Behave properly if mysql_logs is a link
  shell: |
    if [ -h "/var/log/mysql_logs" ]; then
      chown -h mysql "/var/log/mysql_logs"
      chown -R mysql "$(readlink /var/log/mysql_logs)"
    else
      exit 1
    fi
  register: log_dir
  failed_when: false
  changed_when: log_dir.rc == 0

- name: Create mysql log dir
  file:
    path: "/var/log/mysql_logs"
    state: "directory"
    owner: "mysql"
    group: "adm"
    mode: "02755"
  when:
    - log_dir.rc == 1

- name: Stop MariaDB on first MariaDB Galera cluster node
  service: name=mariadb state=stopped
  when: inventory_hostname == groups['galera_all'][0]

- name: Bootstrap first MariaDB Galera cluster node
  command: galera_new_cluster
  when: inventory_hostname == groups['galera_all'][0]

- name: Restart the other MariaDB Galera cluster nodes
  service: name=mariadb state=restarted
  when: inventory_hostname != groups['galera_all'][0]
