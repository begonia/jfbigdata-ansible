- name: set fact instance_default_file
  set_fact: instance_default_file={{default_file | dirname}}/{{es_instance_name}}_{{default_file | basename}}

- name: set fact conf_dir
  set_fact: conf_dir={{ es_conf_dir  }}/{{es_instance_name}}

- name: set fact m_lock_enabled
  set_fact: m_lock_enabled={{ es_config['bootstrap.memory_lock'] is defined and es_config['bootstrap.memory_lock'] == True  }}

- name: set fact instance_init_script
  set_fact: instance_init_script={{init_script | dirname }}/{{es_instance_name}}_{{init_script | basename}}

- name: set fact instance_sysd_script
  set_fact: instance_sysd_script={{sysd_script | dirname }}/{{es_instance_name}}_{{sysd_script | basename}}

- name: set fact instance_suffix
  set_fact: instance_suffix={{inventory_hostname}}-{{ es_instance_name  }}

- name: set fact pid_dir
  set_fact: pid_dir={{ es_pid_dir  }}/{{instance_suffix}}

- name: set fact log_dir
  set_fact: log_dir={{ es_log_dir  }}/{{instance_suffix}}

- name: set fact log_dir
  set_fact: data_dirs={{ es_data_dirs | append_to_list('/'+instance_suffix)  }}

- name: Install Elasticserch 
  yum:
    name: "{{ es_package_url }}-{{ es_version }}.rpm"
    state: present
  notify: restart elasticsearch
  
- name: Create Elasticserch Directories
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
  with_items:
    - "{{ pid_dir }}"
    - "{{ log_dir }}"
    - "{{ conf_dir }}"
    - "{{ data_dirs }}"
  
- name: Copy Configuration File
  template:
    src: "elasticsearch.yml.j2"
    dest: "{{ conf_dir }}/elasticsearch.yml"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"
    mode: "0644"
    force: yes
  register: system_change
  notify: restart elasticsearch

- name: Copy Default File for Instance
  template: 
    src: "elasticsearch.j2"
    dest: "{{ instance_default_file }}"
    mode: "0644" 
    force: yes
  notify: restart elasticsearch


- name: Copy Redhat Init File for Instance
  become: yes
  template: src=init/redhat/elasticsearch.j2 dest={{instance_init_script}} mode=0755 force=yes
  when: ansible_os_family == 'RedHat'
  notify: restart elasticsearch

- name: Copy Systemd File for Instance
  template:
    src: "systemd/elasticsearch.j2"
    dest: "{{instance_sysd_script}}"
    mode: 0644 
    force: yes
  notify:
  - reload systemd configuration
  - restart elasticsearch

- name: Copy log4j2.properties File for Instance
  template:
    src: "log4j2.properties.j2"
    dest: "{{conf_dir}}/log4j2.properties"
    owner: "{{ es_user  }}" 
    group: "{{ es_group  }}"
    mode: 0644
    force: yes
  notify: restart elasticsearch

- name: Copy jvm.options File for Instance
  template: 
    src: "jvm.options.j2"
    dest: "{{conf_dir}}/jvm.options"
    owner: "{{ es_user  }}"
    group: "{{ es_group  }}"
    mode: 0644 
    force: yes
  notify: restart elasticsearch

- name: Delete Default Init
  file: dest=/etc/init.d/elasticsearch state=absent

- name: Create empty default environment file
  changed_when: False
  copy:
    dest: /etc/sysconfig/elasticsearch
    content: ''

- name: Delete Default Sysconfig File
  file: 
    dest: "{{ sysd_script }}"
    state: "absent"

- name: Delete Default Configuration File
  file: dest=/etc/elasticsearch/elasticsearch.yml state=absent

- name: Delete Default Logging File
  file: dest=/etc/elasticsearch/logging.yml state=absent

- name: Delete Default Logging File
  file: dest=/etc/elasticsearch/log4j2.properties state=absent

- name: Delete Default JVM Options File
  file: dest=/etc/elasticsearch/jvm.options state=absent

- name: Firewalld accept elasticsearch port
  firewalld:
    service: elasticsearch
    permanent: true
    state: enabled
    immediate: true

- name: Copy elasticsearch plugins
  copy:
    src: plugins
    dest: "{{ es_home }}/bin"
    owner: "{{ es_user }}"
    group: "{{ es_group }}"

- name: Install elasticsearch plugins
  command: "{{es_home}}/bin/elasticsearch-plugin install file:///{{ es_home }}/bin/plugins/{{ item }}-{{es_version}}.zip --batch --silent"
  register: plugin_installed
  failed_when: "'ERROR' in plugin_installed.stdout"
  changed_when: plugin_installed.rc == 0
  with_items: "{{ es_plugins  }}"
  notify: restart elasticsearch
  environment:
    CONF_DIR: "{{ conf_dir  }}"
    ES_PATH_CONF: "{{ conf_dir  }}"
    ES_INCLUDE: "{{ instance_default_file  }}"

- name: Set Plugin Directory Permissions
  file: state=directory path={{ es_home }}/plugins owner={{ es_user }} group={{ es_group }} recurse=yes
